<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RGSoC Bundler Team Blog</title>
  <subtitle>Women Contributing to Open Source Software</subtitle>
  <id>http://rgsocbundler.github.io/</id>
  <link href="http://rgsocbundler.github.io/"/>
  <link href="http://rgsocbundler.github.io/feed.xml" rel="self"/>
  <updated>2013-08-31T01:48:00Z</updated>
  <author>
    <name>Jen Diamond</name>
  </author>
  <author>
    <name>Joyce Hsu</name>
  </author>
  <author>
    <name>Jessica Suttles</name>
  </author>
  <entry>
    <title>Week 7 Day 34 It's Optimize Friday</title>
    <link rel="alternate" href="/2013/08/30/week7-day34.html"/>
    <id>/2013/08/30/week7-day34.html</id>
    <published>2013-08-31T01:48:00Z</published>
    <updated>2013-08-31T01:48:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">&lt;h1 id="week-7-day-34"&gt;Week 7 Day 34&lt;/h1&gt;

&lt;h2 id="its-optimize-friday"&gt;It's Optimize Friday&lt;/h2&gt;

&lt;iframe width="560" height="315" src="//www.youtube.com/embed/kfVsfOSbJY0" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;ORRRR&lt;/p&gt;

&lt;iframe width="560" height="315" src="//www.youtube.com/embed/hxleH60hDJY" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;h3 id="jens-friday"&gt;Jen's Friday&lt;/h3&gt;
&lt;p&gt;I am back to working on the issue where when you run &lt;code&gt;bundle oudated gem-not-in-your-Gemfile&lt;/code&gt; it returns that your bundle is up to date. In this example the serv gem is not in the Gemfile.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bundle outdated serv
  Fetching gem metadata from https://rubygems.org/..........
  Fetching gem metadata from https://rubygems.org/..
  Resolving dependencies...

  Your bundle is up to date!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I was looking at the &lt;code&gt;bundler/lib/bundler/cli.rb&lt;/code&gt; files. In the bundle desc inject section I found a def not_found_message that looks similar to what I want to do; identify a missing gem.&lt;/p&gt;

&lt;p&gt;def not_found_message(missing_gem_name, alternatives) message = "Could not find gem '#{missing_gem_name}'."&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# This is called as the result of a GemNotFound, let's see if
# there's any similarly named ones we can propose instead
alternate_names = alternatives.map { |a| a.respond_to?(:name) ? a.name : a }
suggestions = SimilarityDetector.new(alternate_names).similar_word_list(missing_gem_name)
message += "\nDid you mean #{suggestions}?" if suggestions
message
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I ran `bundle inject&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bundle inject blurg 1.0.0
  Fetching gem metadata from https://rubygems.org/..........
  Fetching gem metadata from https://rubygems.org/..
  Resolving dependencies...
  Could not find gem 'blurg (= 1.0.0) ruby' in the gems available on this machine.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This seemed closer to the error I want to see when I run bundle outdated non-existing-gem so I decide to check out a few more command to see if I could find one with a message I'd like to see.&lt;/p&gt;

&lt;p&gt;I ran &lt;code&gt;bundle show serv&lt;/code&gt; (The serv gem is NOT in the Gemfile.)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bundle show serv
  Could not find gem 'serv'.
  Did you mean sdoc?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is even closer to the error I want to see. So I checked out the code in the desc show section of the bundler/lib/bundler/cli.rb file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;desc "show [GEM]", "Shows all gems that are part of the bundle, or the path to a given gem"
long_desc &amp;lt;&amp;lt;-D
  Show lists the names and versions of all gems that are required by your Gemfile.
  Calling show with [GEM] will list the exact location of that gem on your machine.
D
method_option "paths", :type =&amp;gt; :boolean,
  :banner =&amp;gt; "List the paths of all gems that are required by your Gemfile."
def show(gem_name = nil)
  Bundler.ui.silence do
    Bundler.definition.validate_ruby!
    Bundler.load.lock
  end

  if gem_name
    if gem_name == "bundler"
      path = File.expand_path("../../..", __FILE__)
    else
      spec = select_spec(gem_name, :regex_match)
      return unless spec
      path = spec.full_gem_path
      if !File.directory?(path)
        Bundler.ui.warn "The gem #{gem_name} has been deleted. It was installed at:"
      end
    end
    return Bundler.ui.info(path)
  end

  if options[:paths]
    Bundler.load.specs.sort_by { |s| s.name }.map do |s|
      Bundler.ui.info s.full_gem_path
    end
  else
    Bundler.ui.info "Gems included by the bundle:"
    Bundler.load.specs.sort_by { |s| s.name }.each do |s|
      Bundler.ui.info "  * #{s.name} (#{s.version}#{s.git_version})"
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am now working on a path that will lead me to the answer…&lt;/p&gt;

&lt;h3 id="joyces-friday"&gt;Joyce's Friday&lt;/h3&gt;
&lt;p&gt;Started looking at another bundler feature/issue. The feature I am looking to add is when you &lt;code&gt;bundle update&lt;/code&gt;, it shows the old version of the gem being updated. I started a rspec test for it.&lt;/p&gt;

&lt;p&gt;I received feedback and suggestions for my first addition/fix to the Bundler repo. I made improvements to it based on the comment I received. I made a method to store &lt;code&gt;Bundler.which(“git”)&lt;/code&gt; in an instance variable inside bundler.rb. According to mentor Andre, we store it in an instance variable so we only have to look for git once. Instead of having to keep looking for git again and again repeatedly. This technique is called “"memoization."&lt;/p&gt;

&lt;p&gt;Original:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;raise GitError, “Git is not installed!” if !Bundler.which(“git”)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Improved:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;raise GitError, "Git is not installed!" if !Bundler.git_present?
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Week 7 Day 33 Rebasing &amp; Windows Issues</title>
    <link rel="alternate" href="/2013/08/29/week7-day33.html"/>
    <id>/2013/08/29/week7-day33.html</id>
    <published>2013-08-30T02:02:00Z</published>
    <updated>2013-08-30T02:02:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">&lt;h1 id="week-7-day-33"&gt;Week 7 Day 33&lt;/h1&gt;
&lt;p&gt;Thursday, August 29 2013&lt;/p&gt;

&lt;h2 id="rebasing--windows-issues"&gt;Rebasing &amp;amp; Windows Issues&lt;/h2&gt;

&lt;h3 id="joyces-thursday"&gt;Joyce's Thursday&lt;/h3&gt;

&lt;p&gt;After seeing that my test fails and passes from yesterday, I changed the include string to what 
the better error message could be.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;describe "without git installed" do
it "prints a better error message" do

install_gemfile &amp;lt;&amp;lt;-G
  git "#{lib_path('foo-1.0')}", :branch =&amp;gt; "omg" do
    gem 'foo'
  end
G

bundle "update"
expect(out).to include("Git is not installed!")   end end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Read some more and got the message to print when bundle update was ran without git installed.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;raise GitError, "Git is not installed!" if !Bundler.which("git")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This issue was particularly for Windows when the user tries to bundle install. I had moved to an old Mac to make learning web development easier. Now back to Windows. I then setup my Windows and tested it on my Windows.&lt;/p&gt;

&lt;h3 id="jens-thursday"&gt;Jen's Thursday&lt;/h3&gt;

&lt;p&gt;I spent the day going through the messages on all the PR I have out. Fixing, squashing, rebasing.&lt;/p&gt;

&lt;p&gt;I spent a lot of time reading about and changing the sass files. I was trying to get the footer to do something particular. It didn't work quite right but I think it still looks good. At least now I know more about sass. It does look a lot cleaner than css. I added a lower nav bar that I hope gets approved.&lt;/p&gt;

&lt;p&gt;I showed the people at the Meetup group how to squash commits. We researched rebasing vs. merging. &lt;strong&gt;&lt;a href="http://stackoverflow.com/questions/804115/git-rebase-vs-git-merge"&gt;This is the answer I found on Stack Overflow by Rob Di Marco&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Short Version&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Merge takes all the changes in one branch and merge them into another branch in one commit.&lt;/li&gt;
  &lt;li&gt;Rebase says I want the point at which I branched to move to a new starting point
So when do you use either one?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Merge&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Let's say you have created a branch for the purpose of developing 
a single feature. When you want to bring those changes back to master, 
you probably want merge (you don't care about maintaining all of 
the interim commits).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Rebase&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A second scenario would be if you started doing some development and 
then another developer made an unrelated change. You probably want to 
pull and then rebase to base your changes from the current version 
from the repo.&lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
  <entry>
    <title>Week 7 Day 32 Recreating Bundler Issue</title>
    <link rel="alternate" href="/2013/08/28/week7-day32.html"/>
    <id>/2013/08/28/week7-day32.html</id>
    <published>2013-08-29T01:57:00Z</published>
    <updated>2013-08-29T01:57:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">&lt;h1 id="week-7-day-32"&gt;Week 7 Day 32&lt;/h1&gt;

&lt;h2 id="recreating-bundler-issue"&gt;Recreating Bundler Issue&lt;/h2&gt;

&lt;h3 id="jens-wednesday"&gt;Jen's Wednesday&lt;/h3&gt;
&lt;p&gt;I was looking at the issue again and I noticed a link at the bottom of the page. It went to and &lt;a href="https://github.com/bundler/bundler/issues/1915"&gt;older issue.&lt;/a&gt;&lt;/p&gt;

&lt;h4 id="bundle-outdated-gives-success-incorrectly"&gt;'bundle outdated' gives success incorrectly&lt;/h4&gt;

&lt;p&gt;No milestone No one is assigned With bundler-1.2.0.pre installed, I run "bundle outdated gemname-with-typo" — misleadingly it reports success, I think because my bundle is technically up-to-date, since is not actually a gem.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Fetching gem metadata from http://rubygems.org/........
Fetching gem metadata from http://rubygems.org/..

Outdated gems included in the bundle:
Your bundle is up to date
An error message like "gemname-with-typo not found" instead would be greatly clarifying.
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="re-creating-the-error"&gt;Re-creating the Error&lt;/h4&gt;

&lt;p&gt;adelcambre's suggested that I make a directory with a Gemfile and run bundle outdated and see what happens when you specify a gem in the Gemfile, vs one that isn't.&lt;/p&gt;

&lt;h4 id="andys-test-looked-like-this"&gt;Andy's test looked like this:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir test_outdated
$ cd test_outdated
$ vi Gemfile
$ bundle
  Fetching gem metadata from https://rubygems.org/..
  Resolving dependencies...
  Using rake (10.1.0)
  Using bundler (1.3.5)
  Your bundle is complete!
  Use `bundle show [gemname]` to see where a bundled gem is installed.
$ bundle outdated rake
  Fetching gem metadata from https://rubygems.org/..
  Resolving dependencies...

  Your bundle is up to date!
  ... **He notes**: One gem in the gemfile (rake), bundle outdated rake and bundle outdated rails look exactly the same even though rake is there and rails isn't
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="my-test-looked-like-this"&gt;My test looked like this:&lt;/h4&gt;

&lt;p&gt;I ran $ bundle outdated serv to check the error because there is no serv gem listed in the Gemfile.&lt;/p&gt;

&lt;p&gt;$ bundle outdated serv
  Fetching gem metadata from https://rubygems.org/……….
  Fetching gem metadata from https://rubygems.org/..
  Resolving dependencies…&lt;/p&gt;

&lt;p&gt;Your bundle is up to date!&lt;/p&gt;

&lt;p&gt;$ bundle outdated rake
  You have requested:
  rake = 10.0.4&lt;/p&gt;

&lt;p&gt;The bundle currently has rake locked at 10.1.0.
  Try running &lt;code&gt;bundle update rake&lt;/code&gt;
So yes it worked, I re-created the error or in this case the lack there of.&lt;/p&gt;

&lt;p&gt;I took a break to deal with my land-lord and my broken sink and leaking toilet. I returned to find that Jessica had made comments on all my pull requests so I started doing 8 corrections then squashed them all. I am feeling pretty comfortable with squashing and rebasing now. This time when everything went awry on one of the squashings I was able to figure out how to fix it on my own.&lt;/p&gt;

&lt;h3 id="joyces-wednesday"&gt;Joyce's Wednesday&lt;/h3&gt;
&lt;p&gt;I brushed up on my Ruby by watching &lt;a href="http://ruby-kickstart.com/"&gt;videos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I setup Rspec test for the bundler feature I am adding. I am adding a better error message if the user is trying to update the gems from git, but they don’t have git installed on their computer.&lt;/p&gt;

&lt;p&gt;The Output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/Cellar/rbenv/0.4.0/libexec/rbenv: line 6: head: command not found
/usr/local/Cellar/rbenv/0.4.0/libexec/rbenv: line 6: rbenv: command not found
Updating git://github.com/square/cane.git
sh: git: command not found
Git error: command `git fetch --force --quiet --tags 'git://github.com/square/cane.git' "refs/heads/*:refs/heads/*"` in directory /Users/xavier/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/cache/bundler/git/cane-cf0b162855cb0919196ab923be218a839f69a0aa
has failed.
If this error persists you could try removing the cache directory '/Users/xavier/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/cache/bundler/git/cane-cf0b162855cb0919196ab923be218a839f69a0aa'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I wrote my test based on &lt;a href="https://github.com/bundler/bundler/blob/master/spec/update/git_spec.rb#L5-L22"&gt;this example spec&lt;/a&gt;. I got the test to pass if I “removed” git from my computer.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;describe "without git installed" do
  it "prints a better error message" do

    install_gemfile &amp;lt;&amp;lt;-G
      git "#{lib_path('foo-1.0')}", :branch =&amp;gt; "omg" do
        gem 'foo'
      end
    G

    bundle "update"
    expect(out).to include("Git error")
  end
end
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Week 7 Day 31 Bundler Features Phase 1</title>
    <link rel="alternate" href="/2013/08/27/week7-day31.html"/>
    <id>/2013/08/27/week7-day31.html</id>
    <published>2013-08-27T20:05:00Z</published>
    <updated>2013-08-27T20:05:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">&lt;h1 id="week-7-day-31"&gt;Week 7 Day 31&lt;/h1&gt;

&lt;h2 id="bundler-features-phase-1"&gt;Bundler Features Phase 1&lt;/h2&gt;

&lt;h3 id="tuesday-aug-28th"&gt;Tuesday Aug 28th&lt;/h3&gt;

&lt;h3 id="joyces-tuesday"&gt;Joyce's Tuesday&lt;/h3&gt;

&lt;p&gt;Yay! The report a bug page pulled in from the issues.md of the bundler repo got merged!&lt;/p&gt;

&lt;p&gt;Reviewed material on Gemfile, Rake, setting up alias, the bundler directory, thor in preparation on adding a bundler feature.&lt;/p&gt;

&lt;p&gt;Working on adding/fixing a bundler feature, got my system to reproduce the error by “removing” git.&lt;/p&gt;

&lt;h3 id="jens-tuesday"&gt;Jen's Tuesday&lt;/h3&gt;

&lt;h4 id="more-improvements-and-prs-pull-requests"&gt;More Improvements and PRs (pull requests)&lt;/h4&gt;

&lt;p&gt;I worked on some more improvements to the &lt;a href="http://bundler.io/"&gt;bundler.io site&lt;/a&gt;
I combined 3 things onto a new page called workflow instead of doing a get-sarted page.
+ 1. The top blurb.(the part under Bundler's Purpose and Rationale)
+ 2. A Simple Bundler Workflow from rationale page
+ 3. recommended workflow" at http://bundler.io/v1.3/bundle_update.htm&lt;/p&gt;

&lt;p&gt;I deleted two sections off of the index page; the block of links called Learn About and the block of links called Use Bundler with. They were all duplicated in the sidebar. &lt;/p&gt;

&lt;p&gt;I created a new footer with links similar to what used to be at the top of the Bundler page; buttons for Get Started, Report a Bug, See What's New, Read Documentation, Discuss and Contribute and I added Bundler Workflow. &lt;/p&gt;

&lt;p&gt;I also added the blurb from the rationale page to the top of the index page because it describes what Bundler does in more depth. Now there is nothing left on the rationale page that is not duplicated in other places once all my pull requests are excepted. &lt;/p&gt;

&lt;p&gt;I moved the Devswag image and text to the sidebar and made some improvements to the text. So buying a Bundler t-shirt and stickers will hopefully be more appealing.&lt;/p&gt;

&lt;h3 id="bundler-features"&gt;bundler-features&lt;/h3&gt;

&lt;p&gt;Joyce and I both started on a bundler-feature that had a small tag on it. Andre helped pick one for each of us.&lt;/p&gt;

&lt;h4 id="bundle-outdated-should-return-non-zero-success-code-for-invalid-gem-name"&gt;bundle outdated should return non-zero success code for invalid gem name&lt;/h4&gt;

&lt;p&gt;Andre said that the code to check if the gem name is valid is something like:
    if Bundler.definifion.specs.search(gemname).empty?
    # not a valid gem name, you should raise a Bundler::GemNotFound error 
    with a message like "#{gemname} isn't a gem in your bundle, so it can't be updated"
    end&lt;/p&gt;

&lt;p&gt;I asked if I should I change this?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if gems.empty? &amp;amp;&amp;amp; sources.empty?
    # We're doing a full update
    definition = Bundler.definition(true)
  else
    definition = Bundler.definition(:gems =&amp;gt; gems, :sources =&amp;gt; sources)
end
options["local"] ? definition.resolve_with_cache! : definition.resolve_remotely!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Andre replied: oh hmm I guess I was wrong. You will probably need to rescue the error that is raised by that code
if the gem doesn't exist.&lt;/p&gt;

&lt;h4 id="looking-for-the-files"&gt;Looking for the files&lt;/h4&gt;

&lt;p&gt;Using &lt;code&gt;$ grep -f "outdated" .&lt;/code&gt; I found all the file that outdated is used in.
    CHANGELOG
    man/bundle.ronn
    lib/bundler/man/bundle.txt
    lib/bundler/man/bundle
    lib/bundler/runtime.rb
    lib/bundler/cli.rb
    spec/other/platform_spec.rb
    spec/other/outdated_spec.rb
————————————-&lt;/p&gt;

&lt;h4 id="trying-to-re-create-the-error"&gt;Trying to re-create the error&lt;/h4&gt;

&lt;p&gt;I made a file based on the file in the &lt;a href="https://github.com/bundler/bundler-features/issues/6"&gt;bundler-features issue 6.&lt;/a&gt;
It states that the following code should exit 0.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

set -ex

mkdir -p /tmp/bf-issue-6
cd /tmp/bf-issue-6

cat &amp;gt; Gemfile &amp;lt;&amp;lt;EOF
source "https://rubygems.org"
EOF

bundle
! bundle outdated blurgh || (echo "failed" &amp;amp;&amp;amp; exit 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I created the file on my desktop, named it zero and ran it. This is what I saw.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;**$ chmod +x zero
$ ./zero
+ mkdir -p /tmp/bf-issue-6
+ cd /tmp/bf-issue-6
+ cat
+ bundle
The Gemfile specifies no dependencies
Resolving dependencies...
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
+ bundle outdated blurgh
Fetching gem metadata from https://rubygems.org/.
Resolving dependencies...

Your bundle is up to date!
+ echo failed
failed
+ exit 1

$ echo $?
1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I changed the exit code to 0 and ran it again. This is what I saw. The command &lt;code&gt;$ echo $?&lt;/code&gt; shows what the last program exited as.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./zero
+ mkdir -p /tmp/bf-issue-6
+ cd /tmp/bf-issue-6
+ cat
+ bundle
The Gemfile specifies no dependencies
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
+ bundle outdated blurgh
Fetching gem metadata from https://rubygems.org/.
Resolving dependencies...

Your bundle is up to date!
+ echo failed
failed
+ exit 0
$ echo $?
0
&lt;/code&gt;&lt;/pre&gt;

</content>
  </entry>
  <entry>
    <title>Week 7 Day 30 Not Rationale Bug n' Rake</title>
    <link rel="alternate" href="/2013/08/26/week7-day30.html"/>
    <id>/2013/08/26/week7-day30.html</id>
    <published>2013-08-27T00:10:00Z</published>
    <updated>2013-08-27T00:10:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">&lt;h1 id="week-7-day-30"&gt;Week 7 Day 30&lt;/h1&gt;

&lt;h2 id="not-rationale-bug-n-rake"&gt;Not Rationale Bug n' Rake&lt;/h2&gt;

&lt;h3 id="jens-monday"&gt;Jen's Monday&lt;/h3&gt;
&lt;p&gt;I broke up parts of the rationale page and combined them into other pages instead of adding them on the get started page&lt;/p&gt;

&lt;p&gt;per Andre's requests:
Grouping - The section about "groups" should be merged with the page that is linked as "Grouping" in the sidebar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Set Up&lt;/strong&gt; - The section about "set up your application to use bundler" should be merged with the Bundler.setup page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sharing&lt;/strong&gt; - The "check your code into version control" and "share your application with other developers" should be put into a new page named "Sharing" and linked in the sidebar Usage section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updating Gem&lt;/strong&gt; - The "updating a dependency" and "updating a gem without modifying the gemfile" sections should be put into a new page named "Updating gems" and linked in the sidebar in the Usage section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deploying&lt;/strong&gt; - The "deploying your application" section should be merged with the existing "deploying" page that is linked in the sidebar.&lt;/p&gt;

&lt;h3 id="joyces-monday"&gt;Joyce's Monday&lt;/h3&gt;
&lt;p&gt;The Report a bug page is generated from the issues.md file placed in the source directory. The bug is the markdown file does not render to html correctly. The number &lt;code&gt;4&lt;/code&gt; shows up to the right of the Bundler logo and makes the logo link not clickable. This is weird. We spent time trying to fix the &lt;code&gt;4&lt;/code&gt;. Andre realized that &lt;code&gt;4&lt;/code&gt; is the id of nil and then found that the markdown file can’t render &lt;code&gt;link_to&lt;/code&gt; with blocks. He fixed it in the layout.haml. Now I don’t need to put the issues.md in a partial to have the page render correctly.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;:issues&lt;/code&gt; task was included before the &lt;code&gt;:build&lt;/code&gt; task that way it gets a copy of the latest issues.md file before deploying. Also, the source/issues.md was added to &lt;code&gt;.gitignore&lt;/code&gt; so that the build artifacts from the bundler repo is not in the bundler-site repo.&lt;/p&gt;

&lt;p&gt;The report a bug page generated from the ISSUES.md of the bundler repo was squashed and submitted the PR to bundler repo.&lt;/p&gt;

&lt;p&gt;Started reading about some more &lt;a href="http://git-scm.com/2011/07/11/reset.html"&gt;git commands&lt;/a&gt;: git clean, git reset&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 6 Day 29 Partially Squish Squashed</title>
    <link rel="alternate" href="/2013/08/23/week6-day29.html"/>
    <id>/2013/08/23/week6-day29.html</id>
    <published>2013-08-24T01:43:00Z</published>
    <updated>2013-08-24T01:43:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">&lt;h1 id="week-6-day-29"&gt;Week 6 Day 29&lt;/h1&gt;

&lt;h4 id="friday-august-23-2013"&gt;Friday, August 23, 2013&lt;/h4&gt;

&lt;h2 id="partially-squish-squashed"&gt;Partially Squish Squashed&lt;/h2&gt;

&lt;h3 id="jen-friday"&gt;Jen' Friday&lt;/h3&gt;

&lt;p&gt;I read about Rspec and spent the rest of day wrapping up the FAQ page. I worked on doing my first commit squash and I ran into problem after problem with git which Andre walked me through.&lt;/p&gt;

&lt;p&gt;These are the basic commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout master 

$ git pull upstream master 

$ git checkout faqpage 

$ git rebase -i master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Successfully rebased and updated refs/heads/master.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Change the word "pick" to "s"&lt;/strong&gt; Then run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git push -f origin faqpage
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/jendiamond/6325286#file-gistfile1-md"&gt;and here's a link to the rest of the directions.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="joyces-friday"&gt;Joyce's Friday&lt;/h3&gt;

&lt;p&gt;Received suggestions on how to improve the Rake task to build the issues page and made changes to it. There was a 4 to the right of the Bundler logo, which makes the the logo unclickable. I don’t know where it is coming from. I created a partial to embed it to another page and the 4 disappeared. shrugs. The page looks pretty good, except for the code block. :-/ Fixed it in the CSS. Then, updated the “Report a bug” link on the sidebar to this page and moved the partial to the correct directory. Got the code block and inline code style to match with the rest of website.&lt;/p&gt;

&lt;p&gt;Squashed the sidebar button fix for Firefox and submitted PR to bundler site. &lt;strong&gt;The fix has been merged. Yay!&lt;/strong&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
