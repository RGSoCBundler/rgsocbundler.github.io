<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RGSoC Bundler Team Blog</title>
  <subtitle>Women Contributing to Open Source Software</subtitle>
  <id>http://rgsocbundler.github.io/</id>
  <link href="http://rgsocbundler.github.io/"/>
  <link href="http://rgsocbundler.github.io/feed.xml" rel="self"/>
  <updated>2013-09-23T22:10:00Z</updated>
  <author>
    <name>Jen Diamond</name>
  </author>
  <author>
    <name>Joyce Hsu</name>
  </author>
  <author>
    <name>Jessica Suttles</name>
  </author>
  <entry>
    <title>Week 10 Day 50 Come in Travis</title>
    <link rel="alternate" href="/2013/09/23/week10-day50.html"/>
    <id>/2013/09/23/week10-day50.html</id>
    <published>2013-09-23T22:10:00Z</published>
    <updated>2013-09-23T22:10:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">&lt;h1 id="week-10-day-50"&gt;Week 10 Day 50&lt;/h1&gt;

&lt;h2 id="come-in-travis"&gt;Come in Travis&lt;/h2&gt;

&lt;h3 id="joyces-monday"&gt;Joyce's Monday&lt;/h3&gt;

&lt;p&gt;Looks like the bundle update &amp;#8211;all rspec tests pass now according to Travis CI.&lt;/p&gt;

&lt;p&gt;So because I changed the format of the message that gets displayed when a user runs bundle update (the previous gem version PR), it broke some other tests. I went to go fix those and get them to pass. Continued to make commits and squash them all together to one commit with a summarized, reworded message.&lt;/p&gt;

&lt;h3 id="jens-monday"&gt;Jen's Monday&lt;/h3&gt;

&lt;p&gt;Catching up on posting in the park. Listening to the birds and watching deer stroll by.
Doing more research on the Rocky Mountain Rocky talks and git.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 10 Day 48 Friday</title>
    <link rel="alternate" href="/2013/09/20/week10-day48.html"/>
    <id>/2013/09/20/week10-day48.html</id>
    <published>2013-09-20T22:04:00Z</published>
    <updated>2013-09-20T22:04:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">&lt;h1 id="week-10-day-48"&gt;Week 10 Day 48&lt;/h1&gt;

&lt;h2 id="friday"&gt;Friday&lt;/h2&gt;

&lt;h3 id="jens-friday"&gt;Jen's Friday&lt;/h3&gt;
&lt;p&gt;I researched and reviewed the workshops and presentations for the conference I am attending next week, &lt;a href="http://rockymtnruby.com/"&gt;Rock Mountain Ruby in Boulder&lt;/a&gt;, Colorado. This conference wasn't on the RGSOC list but I found it and noticed that they were offering a scholarship for a free ticket and a guide for the conference. I applied and I won it!&lt;/p&gt;

&lt;p&gt;There are going to be around eight speakers a day and there workshops on the first day. I am very excited to take the workshop on &lt;a href="http://rockymtnruby.com/workshops#workshop_3"&gt;Git and Github&lt;/a&gt;. and the &lt;a href="http://rockymtnruby.com/workshops#workshop_6"&gt;Arduino workshop&lt;/a&gt;. I am also very excited to see one of the people who has been helping us this summer, Andy Delcambre, speak about Ruby Systems and Katrina Owens speak on refactoring.&lt;/p&gt;

&lt;p&gt;This is the first Rubycentric conference I will have attended. I hope to learn a lot, meet some more fellow Rubyists and get inspired to keep on coding long past the RGSOC.&lt;/p&gt;

&lt;p&gt;I also worked on getting caught up with my blogging.&lt;/p&gt;

&lt;h3 id="joyces-friday"&gt;Joyce's Friday&lt;/h3&gt;

&lt;p&gt;I fixed the last bit of the &lt;code&gt;bundle update&lt;/code&gt; rspec test that I missed, squashed down all the commits, and rewrote the commits using &lt;code&gt;git rebase -i&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The submitted PR to show the previous version of the gem had some discussion comments. I learned what “promote that check to block level” means. I changed this bit from:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;old_version = " was (#{locked_spec_version})"
message &amp;lt;&amp;lt; old_version if locked_spec_version &amp;amp;&amp;amp; spec.version != locked_spec_version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if locked_spec_version &amp;amp;&amp;amp; spec.version != locked_spec_version
  message &amp;lt;&amp;lt; " (was #{locked_spec_version})"
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During the discussion they threw out some ideas on how to format the message. I changed to what was suggested and changed the rspec for that to match.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 10 Day 47 begin end bundle update</title>
    <link rel="alternate" href="/2013/09/19/week10-day47.html"/>
    <id>/2013/09/19/week10-day47.html</id>
    <published>2013-09-19T22:09:00Z</published>
    <updated>2013-09-19T22:09:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">&lt;h1 id="week-10-day-47"&gt;Week 10 Day 47&lt;/h1&gt;

&lt;h2 id="begin-end-bundle-update"&gt;begin end bundle update&lt;/h2&gt;

&lt;h3 id="joyces-thurday"&gt;Joyce's Thurday&lt;/h3&gt;

&lt;p&gt;Worked on editing our post for the main RGSoC blog.&lt;/p&gt;

&lt;p&gt;I received word to tweak what the message displays when someone runs bundle 
update and then to squash my commits and send the PR to the 2-0-dev branch. 
However, before that, I realized the message should also let the user know 
how to update a specific gem like bundle update &lt;gem_name&gt;. Although, I was 
suppose to submit my PR...the Travis CI build test didn’t pass. I went and 
fixed all the bundle update failures in the spec directory, made commits 
as I went along.&lt;/gem_name&gt;&lt;/p&gt;

&lt;h3 id="jens-thursday"&gt;Jen's Thursday&lt;/h3&gt;

&lt;p&gt;I added &lt;a href="http://www.gistboxapp.com/"&gt;GistBox&lt;/a&gt; to organize my gists. Now I can sort 
through my gists so much easier. I had created so many that they were getting unwieldy.&lt;/p&gt;

&lt;p&gt;I was working looking at some code in bundler and I noticed a lot of blocks that started 
with begin and ended with end. They all had several exceptions in them. I researched that 
and read about it for a while. &lt;a href="http://blog.rubybestpractices.com/posts/rklemme/003-The_Universe_between_begin_and_end.html"&gt;begin end&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.meetup.com/Los-Angeles-Womens-Ruby-on-Rails-Group/events/137696602/"&gt;Tonight the meetup group I organize met for the monthly meetup.&lt;/a&gt; The theme of the night was "How to Build a Programmer from Scratch." 
It was a really inspiring evening. Almost the entire summer class from General Assembly
 attended to watch their class mates do their first public presentation. Machiko Yasuda, 
Theresa Luu, Emilia Kubo Kirschenbaum &amp;amp; Shana Weitzen all talked about the projects they 
did in GA and about studying together. They also talked about having algorithm parties, the 
importance of pairing, talking out your problems and marking your progress with a blog. 
Giles Bowkett talked about learning Lisp as a way to get a good basis for computer knowledge 
that isn't going to change. He laid out a path to learning Ruby and Rails. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Unit test the Standard Library&lt;/li&gt;
  &lt;li&gt;Write code EVERY day&lt;/li&gt;
  &lt;li&gt;Build something new every week&lt;/li&gt;
  &lt;li&gt;Watch tons of screencasts&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Week 10 Day 45 Gemfile.lock</title>
    <link rel="alternate" href="/2013/09/17/week10-day45.html"/>
    <id>/2013/09/17/week10-day45.html</id>
    <published>2013-09-17T22:09:00Z</published>
    <updated>2013-09-17T22:09:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">&lt;h1 id="week-10-day-45"&gt;Week 10 Day 45&lt;/h1&gt;

&lt;h2 id="gemfilelock"&gt;Gemfile.lock&lt;/h2&gt;

&lt;h3 id="joyces-tuesday"&gt;Joyce's Tuesday&lt;/h3&gt;

&lt;p&gt;I started writing a reflection of my RG experience, and which part of it can be used for 
the post for the RGSoC main blog post.&lt;/p&gt;

&lt;h3 id="jens-tuesday"&gt;Jen's Tuesday&lt;/h3&gt;

&lt;h4 id="gemfilelock-1"&gt;Gemfile.lock&lt;/h4&gt;

&lt;p&gt;I researched Gemfile.lock &lt;/p&gt;

&lt;h4 id="from-the-railscast-201httprailscastscomepisodes201-bundlerviewasciicast---locking-gems"&gt;&lt;a href="http://railscasts.com/episodes/201-bundler?view=asciicast"&gt;From the Railscast #201&lt;/a&gt; - Locking Gems&lt;/h4&gt;

&lt;p&gt;Another useful command is bundle lock. This locks down the specific versions of the gems 
your application is using. After we run it our project will have a new file in it called 
Gemfile.lock. This file lists all of the gems that are installed for our application along 
with specific version that is used. After running bundle lock only the specific versions 
listed in the Gemfile.lock file will be installed when we run bundle install, even if 
there are never versions available.&lt;/p&gt;

&lt;p&gt;You might be wondering when you’d want to use bundle lock. Well, it’s worth using whenever 
a project is used in other locations. If we’re working with other Rails developers on a 
project we can use bundle lock to ensure that everyone is using the same versions of the gems 
that the application uses. The same applies when the application is being deployed to production. 
As the application will be being deployed to a different server we’ll want to be sure that exactly 
the same versions are used on the production server as they are on our development machine.&lt;/p&gt;

&lt;p&gt;If we do need to make changes to an application’s gems after running bundle lock we shouldn’t 
change the Gemfile.lock file directly. Instead we should update the Gemfile as we did before. 
Once we’ve made our changes to the Gemfile, however, running bundle install won’t update the 
application’s gems as the Gemfile is locked. To update the gems we need to pass the –relock option.&lt;/p&gt;

&lt;h4 id="dylan-markow-wrote-this-on-stack-overflowhttpstackoverflowcomquestions6927442what-is-the-difference-between-gemfile-and-gemfile-lock-in-ruby-on-rails"&gt;&lt;a href="http://stackoverflow.com/questions/6927442/what-is-the-difference-between-gemfile-and-gemfile-lock-in-ruby-on-rails"&gt;Dylan Markow wrote this on Stack Overflow.&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;The Gemfile is where you specify which gems you want to use, and lets you specify which versions.&lt;/p&gt;

&lt;p&gt;The Gemfile.lock file is where Bundler records the exact versions that were installed. This way, 
when the same library/project is loaded on another machine, running bundle install will look at 
the Gemfile.lock and install the exact same versions, rather than just using the Gemfile and 
installing the most recent versions. (Running different versions on different machines could lead 
to broken tests, etc.) You shouldn't ever have to directly edit the lock file.&lt;/p&gt;

&lt;h4 id="yahuda-katz---clarifying-the-roles-of-the-gemspec-and-gemfilehttpyehudakatzcom20101216clarifying-the-roles-of-the-gemspec-and-gemfile"&gt;&lt;a href="http://yehudakatz.com/2010/12/16/clarifying-the-roles-of-the-gemspec-and-gemfile/"&gt;Yahuda Katz - Clarifying the Roles of the .gemspec and Gemfile&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Gemfile.lock remembers the exact versions and sources of every piece of third-party code that you use. 
For applications, you want this. When developing a gem, this can obscure issues that will occur 
because gems are deployed (using the gem command) without the benefit of bundler.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>week10-day50</title>
    <link rel="alternate" href="/2013/09/16/week10-day50.html"/>
    <id>/2013/09/16/week10-day50.html</id>
    <published>2013-09-16T22:10:00Z</published>
    <updated>2013-09-16T22:10:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">
</content>
  </entry>
  <entry>
    <title>week10-day52</title>
    <link rel="alternate" href="/2013/09/16/week10-day52.html"/>
    <id>/2013/09/16/week10-day52.html</id>
    <published>2013-09-16T22:10:00Z</published>
    <updated>2013-09-16T22:10:00Z</updated>
    <author>
      <name>RGSoCBundler</name>
    </author>
    <content type="html">
</content>
  </entry>
</feed>
